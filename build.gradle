plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "io.papermc.paperweight.userdev" version "2.0.0-beta.18"
}

def getLatestGitTag() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--abbrev=0'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Exception ignored) {
        return "unknown" // Default value if no tags exist
    }
}

// Versioning
def tag = System.getenv("TAG") ?: getLatestGitTag()
def isSnapshot = System.getenv('SNAPSHOT')?.toBoolean() ?: false
def gitHash = System.getenv('GITHUB_SHA') ?: 'local'

version = isSnapshot ? "$tag-SNAPSHOT-${gitHash.take(7)}" : (System.getenv("TAG") ? tag : "dev-$tag")
group = 'fr.openmc'

repositories {
    mavenCentral()
    maven {
        url "https://maven.devs.beer/"
    }
    maven {
        url "https://repo.fancyinnovations.com/releases"
    }
    maven {
        url "https://maven.enginehub.org/repo/"
    }
    maven {
        url "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        url "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        url "https://jitpack.io" // Toujours Ã  la fin
    }
}

dependencies {
    paperweight.paperDevBundle '1.21.8-R0.1-SNAPSHOT'

    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.10'
    compileOnly 'dev.lone:api-itemsadder:4.0.10'
    compileOnly 'net.luckperms:api:5.5'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.9'
    compileOnly 'de.oliver:FancyNpcs:2.6.0'
    compileOnly 'com.github.dmulloy2:ProtocolLib:5.3.0'

    implementation 'org.jetbrains:annotations:26.0.2'
    implementation 'com.github.Revxrsal.Lamp:common:3.3.6'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.3.6'
    implementation 'com.j256.ormlite:ormlite-jdbc:6.1'

    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

    testImplementation 'org.slf4j:slf4j-simple:2.0.17'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockbukkit.mockbukkit:mockbukkit-v1.21:4.50.0'
    testImplementation 'com.h2database:h2:2.3.232'
}

def targetJavaVersion = 21
java {
    sourceCompatibility = targetJavaVersion
    targetCompatibility = targetJavaVersion
}

paperweight {
  addServerDependencyTo = configurations.named(JavaPlugin.COMPILE_ONLY_CONFIGURATION_NAME).map { [it] as Set }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = targetJavaVersion
}

processResources {
    filteringCharset = 'UTF-8'

    def pluginProps = ["version": version]
    inputs.properties(pluginProps)
    filesMatching('plugin.yml') {
        expand(pluginProps)
    }
}

tasks.jar {
    manifest {
        attributes 'GIT-COMMIT': gitHash
    }
    destinationDirectory.set(file('./builds/'))
}

tasks.clean {
    delete 'builds'
}

tasks.shadowJar {
    destinationDirectory.set(file('./builds/'))
    archiveFileName.set('OpenMC.jar')
}

tasks.test {
    useJUnitPlatform()
}
